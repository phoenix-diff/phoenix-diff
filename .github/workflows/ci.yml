name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: '24.3.2'
          elixir-version: '1.13.3'
      - uses: actions/cache@v2
        with:
          path: |
            _build
            deps
          key: ${{ runner.os }}-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - run: mix deps.get
      - name: Restore core plt cache
        uses: actions/cache@v2
        id: core-plt-cache
        with:
          path: .dialyzer/core
          key:
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt-core-v1
      - name: Restore local plt cache
        uses: actions/cache@v2
        id: local-plt-cache
        with:
          path: .dialyzer/local
          key:
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt-local-${{ env.MIX_ENV || 'dev' }}-v1-${{ hashFiles('**/mix.lock')}}
      - name: Compile dialyzer PLT
        if: steps.local-plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p .dialyzer/core
          mkdir -p .dialyzer/local
          mix dialyzer --plt
      - run: mix ci

  test_javascript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Download phoenix so we yarn install works correctly
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '24.3.2'
          elixir-version: '1.13.3'
      - run: mix deps.get
      - uses: actions/setup-node@v3
        with:
          node-version: '14.19.0'
      - name: Install dependencies
        run: yarn install
        working-directory: assets
      - name: Build assets
        run: yarn run deploy
        working-directory: assets
